@model NET_student_project.ViewModels.ShortMemesListViewModel
@{
    ViewBag.Title = "Home Page";
}
@section scripts{
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
}
    <div class="container">
        @{
            foreach (var meme in Model.Memes)
            {
                <h3>  @Html.ActionLink(meme.Title, "MemeDetail", "Meme", new { id = meme.MemeId }, null)</h3>
                <img class="img-responsive" width="600" src=@meme.ImagePath />
                <div id="@string.Format("{0}_{1}", "PointBlock", meme.MemeId)">
                    <div class="row">
                        <div class="col-md-2">
                            <div class="row">
                                <div class="col-md-3">
                                    @using (Ajax.BeginForm("_LikePost", "Meme", new AjaxOptions { HttpMethod = "post", InsertionMode = InsertionMode.Replace, UpdateTargetId = string.Format("{0}_{1}", "PointBlock", meme.MemeId) }))
                                    {
                                        <button type="submit" class="@(Model.LikedMemes.Exists(m => m == meme) ? "btn btn-info":"btn btn-default")" value=@meme.MemeId name="id"> <span class="glyphicon glyphicon-arrow-up"></span></button>
                                    }
                                </div>
                                <div class="col-md-3">
                                    @using (Ajax.BeginForm("_DisLikePost", "Meme", new AjaxOptions { HttpMethod = "post", InsertionMode = InsertionMode.Replace, UpdateTargetId = string.Format("{0}_{1}", "PointBlock", meme.MemeId) }))
                                    {
                                        <button type="submit" class="@(Model.DisLikedMemes.Exists(m => m == meme) ? "btn btn-info":"btn btn-default")" value=@meme.MemeId name="id"> <span class="glyphicon glyphicon-arrow-down"></span></button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <p>@meme.Points points @meme.SComments comments</p>
                </div>
            }
            <li>@Html.ActionLink("back", "Index", "Home", new { id = ViewBag.id, page = ViewBag.page - 1 }, null)</li>
            if (Model.Memes.Count == 9)
            {
                <li>@Html.ActionLink("Next", "Index", "Home", new { id = ViewBag.id, page = ViewBag.page + 1 }, null)</li>
            }
        }
    </div>

